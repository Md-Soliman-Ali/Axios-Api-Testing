{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2022-07-04T12:25:36.958Z",
    "end": "2022-07-04T12:25:42.300Z",
    "duration": 5342,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5c0fde99-f8e4-4c27-bfda-68d71ab99545",
      "title": "",
      "fullFile": "C:\\Users\\ICAB\\Documents\\GitHub\\Axios-Api-Testing\\customers.test.js",
      "file": "\\customers.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6bd142aa-ab1a-4d5f-aa62-75f2eb35f0ee",
          "title": "Customer API Testing",
          "fullFile": "C:\\Users\\ICAB\\Documents\\GitHub\\Axios-Api-Testing\\customers.test.js",
          "file": "\\customers.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get Users",
              "fullTitle": "Customer API Testing Get Users",
              "timedOut": false,
              "duration": 58,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get('https://jsonplaceholder.typicode.com/users', {\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n// console.log(response.data);\nexpect(response.status).equals(200);\nexpect(response.data[0].id).equals(1);",
              "err": {},
              "uuid": "32f82942-b64d-4d88-8725-808a6deaa77b",
              "parentUUID": "6bd142aa-ab1a-4d5f-aa62-75f2eb35f0ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User Login",
              "fullTitle": "Customer API Testing User Login",
              "timedOut": false,
              "duration": 1165,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.post(`${envVariables.baseUrl}/customer/api/v1/login`,\n    // API BODY\n    {\n        \"username\": \"salman\",\n        \"password\": \"salman1234\"\n    },\n    {\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    }\n    // Filter (response = res.data)\n).then(function (res) { return res.data })\nconsole.log(response);\nenvVariables.token = response.token;\nfs.writeFileSync('./env.json', JSON.stringify(envVariables));",
              "err": {},
              "uuid": "085d5b94-968e-4066-9c7b-845efab724d5",
              "parentUUID": "6bd142aa-ab1a-4d5f-aa62-75f2eb35f0ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Customer List",
              "fullTitle": "Customer API Testing Get Customer List",
              "timedOut": false,
              "duration": 790,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get(`${envVariables.baseUrl}/customer/api/v1/list`,\n    {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': envVariables.token\n        }\n    }\n).then(res => res.data)\nconsole.log(response);",
              "err": {},
              "uuid": "f9426402-d361-46e5-b513-f222bc3f3008",
              "parentUUID": "6bd142aa-ab1a-4d5f-aa62-75f2eb35f0ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Customer Info",
              "fullTitle": "Customer API Testing Get Customer Info",
              "timedOut": false,
              "duration": 803,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get(`${envVariables.baseUrl}/customer/api/v1/get/101`,\n    {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': envVariables.token\n        }\n    }\n).then(res => res.data)\nconsole.log(response);\nexpect(response.id).equals(101)",
              "err": {},
              "uuid": "ff7a2627-6310-4a34-9045-2732a57e979c",
              "parentUUID": "6bd142aa-ab1a-4d5f-aa62-75f2eb35f0ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Customer",
              "fullTitle": "Customer API Testing Create Customer",
              "timedOut": false,
              "duration": 796,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.post(`${envVariables.baseUrl}/customer/api/v1/create`,\n    {\n        \"id\": Math.floor((Math.random() * (9999 - 1111)) + 1),\n        \"name\": faker.name.firstName(),\n        \"email\": faker.internet.email(),\n        \"address\": faker.address.streetAddress(),\n        \"phone_number\": faker.phone.phoneNumber()\n    },\n    {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': envVariables.token\n        }\n    }\n).then(res => res.data)\nconsole.log(response);\nexpect(response.message).contains(\"Success\");\nenvVariables.id = response.Customers.id;\nenvVariables.name = response.Customers.name;\nenvVariables.email = response.Customers.email;\nenvVariables.address = response.Customers.address;\nenvVariables.phone_number = response.Customers.phone_number;\nfs.writeFileSync('./env.json', JSON.stringify(envVariables));",
              "err": {},
              "uuid": "61d06738-53df-4b62-86ac-f02e180c9af6",
              "parentUUID": "6bd142aa-ab1a-4d5f-aa62-75f2eb35f0ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Customer",
              "fullTitle": "Customer API Testing Update Customer",
              "timedOut": false,
              "duration": 869,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.put(`${envVariables.baseUrl}/customer/api/v1/update/${envVariables.id}`,\n    {\n        \"id\": envVariables.id,\n        \"name\": envVariables.name,\n        \"email\": envVariables.email,\n        \"address\": \"Dhaka,Bangladesh\",\n        \"phone_number\": \"01706994692\"\n    },\n    {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': envVariables.token\n        }\n    }\n).then(res => res.data)\nconsole.log(response);\nexpect(response.message).contains(\"Success\");",
              "err": {},
              "uuid": "685e7ed2-b6fa-4a4e-9fbf-e723aa23a461",
              "parentUUID": "6bd142aa-ab1a-4d5f-aa62-75f2eb35f0ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete Customer",
              "fullTitle": "Customer API Testing Delete Customer",
              "timedOut": false,
              "duration": 843,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.delete(`${envVariables.baseUrl}/customer/api/v1/delete/${envVariables.id}`,\n    {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': envVariables.token\n        }\n    }\n).then(res => res.data)\nconsole.log(response);\nexpect(response.message).contains(\"Customer deleted!\");",
              "err": {},
              "uuid": "c7a85e1c-3eb0-467a-ace1-73a602313537",
              "parentUUID": "6bd142aa-ab1a-4d5f-aa62-75f2eb35f0ee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "32f82942-b64d-4d88-8725-808a6deaa77b",
            "085d5b94-968e-4066-9c7b-845efab724d5",
            "f9426402-d361-46e5-b513-f222bc3f3008",
            "ff7a2627-6310-4a34-9045-2732a57e979c",
            "61d06738-53df-4b62-86ac-f02e180c9af6",
            "685e7ed2-b6fa-4a4e-9fbf-e723aa23a461",
            "c7a85e1c-3eb0-467a-ace1-73a602313537"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5324,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 30000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report.html",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "Reports",
        "reportFilename": "report.html"
      },
      "version": "6.2.0"
    }
  }
}